[1mdiff --git a/Server/Controllers/ProjectController.js b/Server/Controllers/ProjectController.js[m
[1mindex 235e38e..2058763 100644[m
[1m--- a/Server/Controllers/ProjectController.js[m
[1m+++ b/Server/Controllers/ProjectController.js[m
[36m@@ -40,6 +40,7 @@[m [mexport default (app) => {[m
       new Project(Object.assign({}, JSON.parse(project), { id : parseInt(id), user_id : tokenData.user })).update().then(newProject => {[m
         res.status(200).send({ project: newProject }).end();[m
       }).catch(err => {[m
[32m+[m[32m        console.error(err);[m
         res.status(500).send({ error: err.message }).end();[m
       });[m
     } catch(err) {[m
[1mdiff --git a/Server/DataBase/MockDB.js b/Server/DataBase/MockDB.js[m
[1mindex 7d4a0a9..04cef87 100644[m
[1m--- a/Server/DataBase/MockDB.js[m
[1m+++ b/Server/DataBase/MockDB.js[m
[36m@@ -3,8 +3,8 @@[m [mimport Project from '../Models/Project';[m
 import bcrypt from 'bcryptjs';[m
 [m
 [m
[31m-const users = [{id: 1, email: 'a', password: bcrypt.hashSync('password', 8) }];[m
[31m-const projects = [{ id: 1, user_id: 1, name:'Projet 1', url:'projet1.jsb', git:'gitlab.jsb/projet1', env: 'PHP', keywords: ['A'] }];[m
[32m+[m[32mconst users = [{id: 1, email: 'a@a.be', password: bcrypt.hashSync('password', 8) }];[m
[32m+[m[32mconst projects = [{ id: 1, user_id: 1, name:'Projet 1', description:'Ceci est une description.', url:'http://projet1.jsb', git:'http://gitlab.jsb/projet1', env: 'PHP', keywords: ['A'] }];[m
 [m
 export const findUserByEmail = email => ([m
   new Promise((resolve, reject) => {[m
[1mdiff --git a/Server/DataBase/MySQL.js b/Server/DataBase/MySQL.js[m
[1mindex a99cc6e..9f8f4d1 100644[m
[1m--- a/Server/DataBase/MySQL.js[m
[1m+++ b/Server/DataBase/MySQL.js[m
[36m@@ -11,6 +11,7 @@[m [mconst db = mysql.createConnection({[m
 });[m
 [m
 const waitToBeConnected = new Promise((resolve, reject) => {[m
[32m+[m[32m  if(config.database.useMock)return;[m
   db.connect((err) => {[m
     if (err) reject(err);[m
     console.log("Connected to MySQL!");[m
[1mdiff --git a/Server/Models/Project.js b/Server/Models/Project.js[m
[1mindex 06229f4..af474f7 100644[m
[1m--- a/Server/Models/Project.js[m
[1m+++ b/Server/Models/Project.js[m
[36m@@ -16,15 +16,23 @@[m [mexport default class Project {[m
   }[m
   [m
   update(){[m
[31m-    return db.findProjectById(this.id).then(oldProject => {[m
[31m-      return db.updateProject(this).then(project => {[m
[32m+[m[32m    return db.findProjectById(this.id).then(oldProjectWithoutUser => {[m
[32m+[m[32m      return db.findUserById(oldProjectWithoutUser.user_id).then(user => {[m
[32m+[m[32m        if(!user) throw new Error("User "+oldProjectWithoutUser.user_id+" cannot be found while project update");[m
[32m+[m[32m        Object.assign(user, {password : null})[m
[32m+[m[32m        console.log(user);[m
[32m+[m[32m        return Object.assign({}, oldProjectWithoutUser, { user });[m
[32m+[m[32m      }).then(oldProject => db.updateProject(this).then(project => {[m
         return db.findUserById(project.user_id).then(user => {[m
[31m-          return Object.assign(project, { user : Object.assign(user, {password : null}) });[m
[32m+[m[32m          if(!user) throw new Error("User "+project.user_id+" cannot be found while project update");[m
[32m+[m[32m          Object.assign(user, {password : null})[m
[32m+[m[32m          console.log(user);[m
[32m+[m[32m          return Object.assign({}, project, { user });[m
         }).then(proj => {[m
           SSH.removeProject(oldProject).then(_ => SSH.setupProject(proj));[m
           return proj;[m
[31m-        });[m
[31m-      });[m
[32m+[m[32m        }).catch(err => {throw err;});[m
[32m+[m[32m      }));[m
     });[m
   }[m
   [m
[1mdiff --git a/Server/Services/SSH.js b/Server/Services/SSH.js[m
[1mindex bd2e4d3..3c52839 100644[m
[1m--- a/Server/Services/SSH.js[m
[1m+++ b/Server/Services/SSH.js[m
[36m@@ -4,11 +4,16 @@[m [mimport path from 'path';[m
 [m
 const ssh = new node_ssh();[m
 [m
[31m-const waitToBeConnected = ssh.connect(Object.assign(config.ssh, { privateKey : path.join(dirname__, '..' ,config.ssh.privateKey) }))[m
[31m-                            .catch((err) => {console.error(err); process.exit(1);});[m
[32m+[m[32mconst waitToBeConnected = config.ssh.enabled ?[m
[32m+[m[32m      ssh.connect(Object.assign(config.ssh, { privateKey : path.join(dirname__, '..' ,config.ssh.privateKey) }))[m
[32m+[m[32m                            .catch((err) => {console.error(err); process.exit(1);})[m
[32m+[m[32m      :[m
[32m+[m[32m      Promise.resolve();[m
 [m
 const execute = (command, params) => {[m
   return waitToBeConnected.then(_ => {[m
[32m+[m[32m    if(!config.ssh.enabled) return;[m
[32m+[m[32m    console.log("SSH : ",comand, " ", params);[m
     ssh.exec(command, params, { /*cwd: '/var/www',*/ stream: 'stdout', options: { pty: true } }).then((result) => {[m
       console.log(result)[m
     })[m
[1mdiff --git a/Server/config.json b/Server/config.json[m
[1mindex ff6849a..086821f 100644[m
[1m--- a/Server/config.json[m
[1m+++ b/Server/config.json[m
[36m@@ -2,13 +2,14 @@[m
   "port": 8080,[m
   "secret": "secretToken",[m
   "database":{[m
[31m-    "useMock": false,[m
[32m+[m[32m    "useMock": true,[m
     "name": "MyCamp",[m
     "host":"localhost",[m
     "user":"root",[m
     "password":"root"[m
   },[m
   "ssh":{[m
[32m+[m[32m    "enabled":false,[m
     "host": "localhost",[m
     "username": "cabox",[m
     "password":""[m
[1mdiff --git a/src/Pages/App/App.js b/src/Pages/App/App.js[m
[1mindex 6017cd5..41fbc7a 100644[m
[1m--- a/src/Pages/App/App.js[m
[1m+++ b/src/Pages/App/App.js[m
[36m@@ -79,9 +79,6 @@[m [mclass App extends Component {[m
                 imageStyle={{ width: 'inherit', height: 'inherit' }	}[m
                 src={imageHeader}[m
               />[m
[31m-              <div style={{ position: 'absolute', top: 0, width: 'calc( 100% - 10px )', padding: 5, fontSize: 18 }} >[m
[31m-                {"{{"} Citation du jour {"}}"}[m
[31m-              </div>[m
             </div>[m
             {[m
               isAuth() ?[m
